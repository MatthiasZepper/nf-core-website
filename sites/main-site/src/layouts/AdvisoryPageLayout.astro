---
import PageLayout from "@layouts/PageLayout.astro";
import MarkdownWrapper from "@components/markdown/MarkdownWrapper.svelte";
import SidebarNav from "@components/sidebar/SidebarNav.astro";
import AdvisoryHeader from "@components/advisory/AdvisoryHeader.astro";
import AdvisoryImpact from "@components/advisory/AdvisoryImpact.astro";
import "katex/dist/katex.min.css";
import type { SidebarEntry } from "@utils/types";

export interface Props {
    title: string;
    subtitle?: string;
    md_github_url: string;
    headings: ({ text: string; slug: string; depth: number; fa_icon?: string } | undefined)[];
    advisory_header: any;
    leftSidebar?: boolean;
    rightSidebar?: boolean;
    sections?: SidebarEntry[];
    viewTransitions?: boolean;
    meta_title?: string;
    docSearchTags?: {
        name: string;
        content: string;
    }[];
    image?: string;
    doubleNavbar?: boolean;
    sidebarTitle?: string;
}

const {
    title,
    subtitle,
    md_github_url,
    headings,
    advisory_header,
    leftSidebar,
    rightSidebar = true,
    sections = [],
    viewTransitions = false,
    meta_title = "",
    docSearchTags = [],
    image,
    doubleNavbar = true,
    sidebarTitle = "",
} = Astro.props;

const minNumHeadings = 2;
const leftSidebarWidth = 3;
const rightSidebarWidth = 3;
const showRightSidebar = headings.length > minNumHeadings || rightSidebar;

let mainContentWidth = 12;
if (leftSidebar) {
    mainContentWidth -= leftSidebarWidth;
}
if (showRightSidebar) {
    mainContentWidth -= rightSidebarWidth;
}
---

<script>
    // Switch any images with .darkmode-image class to the correct version for the theme
    function switchDarkModeImages() {
        const theme = document.documentElement.getAttribute("data-bs-theme");
        const images = document.querySelectorAll("img.darkmode-image");
        for (const img of images) {
            if (theme === "light") {
                img.src = img.src.replace("/white/", "/colour/");
            } else if (theme === "dark") {
                img.src = img.src.replace("/colour/", "/white/");
            }
        }
    }
    // change images on page load, based on current theme
    window.addEventListener("load", () => {
        switchDarkModeImages();
    });
    // listen for even dispatched from ThemeSwitch.svelte
    window.addEventListener("theme-changed", (e) => {
        switchDarkModeImages();
    });
</script>

<PageLayout
    title={title}
    meta_title={meta_title || title}
    subtitle={subtitle}
    md_github_url={md_github_url}
    subfooter={true}
    mainpage_container={false}
    navTocHeadings={headings}
    sections={sections}
    docSearchTags={docSearchTags}
    viewTransitions={viewTransitions}
    image={image}
    doubleNavbar={doubleNavbar}
>
    <slot name="header-top" slot="header-top" />
    <div class="container-fluid main-content">
        <div class="row">
            <div class:list={`col-12 col-xl-${mainContentWidth} order-2`}>
                <div class="advisory-content">
                    <AdvisoryHeader frontmatter={advisory_header} />
                    <div class="markdown-content m-auto me-xl-0" transition:animate="fade">
                        <MarkdownWrapper headings={headings} client:idle>
                            <slot />
                        </MarkdownWrapper>
                    </div>
                </div>
            </div>

            {
                showRightSidebar && (
                    <div class={`col-12 col-xl-${rightSidebarWidth} sidebar-right toc order-3`}>
                        <AdvisoryImpact frontmatter={advisory_header} />
                    </div>
                )
            }

            {
                leftSidebar && (
                    <div
                        class={`col-12 col-xl-${leftSidebarWidth} sticky-top-under d-none d-xl-inline sidebar-left order-1`}
                    >
                        {sidebarTitle && (
                            <a
                                href={sections[0].href?.split("/").slice(0, 2).join("/").split("#")[0]}
                                class="sidebar-title text-decoration-none"
                            >
                                <strong class="h6 p-2 text-body">{sidebarTitle}</strong>
                            </a>
                        )}
                        <SidebarNav items={sections} />
                    </div>
                )
            }
        </div>
    </div>
    <slot name="pre-footer" slot="pre-footer" />
    <slot name="post-footer" slot="post-footer" />
</PageLayout>

<style lang="scss">
    @import "@styles/_variables.scss";

    .advisory-content {
        max-width: $content-width;
        margin: 0 auto;
    }

    .markdown-content :global(img[loading="lazy"]) {
        aspect-ratio: attr(width) / attr(height);
        height: auto;
    }

    .sidebar-left {
        max-width: 25rem;
    }

    :global(.admonition figure),
    :global(.admonition pre) {
        margin-bottom: 0;
    }

    :global(.advisory-header) {
        margin-bottom: 2rem;
        padding: 1.5rem;
        background-color: var(--bs-body-bg);
        border-radius: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 1px solid var(--bs-border-color);

        dl {
            margin-bottom: 0;
        }

        dt {
            font-weight: 600;
            color: var(--bs-body-color);
            margin-bottom: 0.25rem;
        }

        dd {
            margin-bottom: 1rem;
        }

        .badge {
            font-size: 0.875rem;
            padding: 0.35em 0.65em;
        }

        a {
            text-decoration: none;
            &:hover {
                text-decoration: underline;
            }
        }
    }
</style>
