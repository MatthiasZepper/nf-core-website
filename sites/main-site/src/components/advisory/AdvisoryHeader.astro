---
import LocalDateTime from "@components/event/LocalDateTime.svelte";
import { advisories_type_classes, advisories_type_icons } from "./advisoryTypes";

interface Props {
    frontmatter: {
        publishedDate: Date;
        severity: string;
        type: string[];
        category: string[];
        references?: string[];
    };
}

const { frontmatter } = Astro.props;

const severityColors = {
    critical: "danger",
    high: "warning",
    medium: "info",
    low: "success",
} as const;

const typeColors = {
    security: "danger",
    bug: "warning",
    enhancement: "info",
    deprecation: "secondary",
} as const;

const categoryColors = {
    pipeline: "primary",
    module: "success",
    subworkflow: "info",
    configuration: "warning",
} as const;

function getLinkIcon(link) {
    if (/^(https?:\/\/)?(www\.)?(youtube\.com|youtu\.?be)\/.+$/gi.test(link)) {
        return "fab fa-youtube";
    } else if (/^(https?:\/\/)?(www\.)?zoom\.us\/.+$/gi.test(link)) {
        return "fab fa-zoom-us";
    } else if (/^(https?:\/\/)?(www\.)?bilibili\.com\/.+$/gi.test(link)) {
        return "fab fa-bilibili";
    } else if (/^(https?:\/\/)?(www\.)?github\.com\/.+$/gi.test(link)) {
        return "fab fa-github";
    } else if (/^(https?:\/\/)?(www\.)?linkedin\.com\/.+$/gi.test(link)) {
        return "fab fa-linkedin";
    } else if (/^(https?:\/\/)?(www\.)?twitter\.com\/.+$/gi.test(link)) {
        return "fab fa-twitter";
    } else if (/^(https?:\/\/)?(www\.)?(docs\.google\.com)\/.+$/gi.test(link)) {
        return "fab fa-google-drive";
    } else if (/^(https?:\/\/)?(www\.)?(slideshare\.net)\/.+$/gi.test(link)) {
        return "fab fa-slideshare";
    }

    return "fas fa-link";
}

function getSeverityClass(severity) {
    return `text-${advisories_type_classes[severity] || 'secondary'}`;
}

function getSeverityIcon(severity) {
    return advisories_type_icons[severity] || 'fa-circle-info';
}

function getTypeClass(type) {
    return advisories_type_classes[type] || 'secondary';
}

function getTypeIcon(type) {
    return advisories_type_icons[type] || 'fa-circle-info';
}
---

<div class="advisory-header">
    <div class="d-flex justify-content-between align-items-start mb-3">
        <div>
            <dl class="mb-0">
                <dt>Published</dt>
                <dd>{frontmatter.publishedDate.toLocaleDateString()}</dd>
            </dl>
        </div>
        <div class="text-end">
            <a href="#" class="btn btn-outline-secondary btn-sm" onclick="window.print(); return false;">
                <i class="fas fa-download me-1"></i>
                Export
            </a>
        </div>
    </div>

    <div class="advisory-metadata">
        <dl>
            <dt>Severity</dt>
            <dd>
                <span class={`badge bg-${severityColors[frontmatter.severity as keyof typeof severityColors]}`}>
                    {frontmatter.severity}
                </span>
            </dd>

            <dt>Type</dt>
            <dd>
                {frontmatter.type.map((type) => (
                    <span class={`badge bg-${typeColors[type as keyof typeof typeColors]} me-1`}>
                        {type}
                    </span>
                ))}
            </dd>

            <dt>Category</dt>
            <dd>
                {frontmatter.category.map((cat) => (
                    <span class={`badge bg-${categoryColors[cat as keyof typeof categoryColors]} me-1`}>
                        {cat}
                    </span>
                ))}
            </dd>

            {frontmatter.references?.length > 0 && (
                <>
                    <dt>References</dt>
                    <dd>
                        <ul class="list-unstyled mb-0">
                            {frontmatter.references.map((ref) => (
                                <li>
                                    <a href={ref} target="_blank" rel="noopener noreferrer">
                                        {ref}
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </dd>
                </>
            )}
        </dl>
    </div>
</div>

<style lang="scss">
    .advisory-header {
        dl {
            margin-bottom: 0;
        }

        dt {
            font-weight: 600;
            color: var(--bs-body-color);
            margin-bottom: 0.25rem;
        }

        dd {
            margin-bottom: 1rem;
            &:last-child {
                margin-bottom: 0;
            }
        }

        .badge {
            font-size: 0.875rem;
            padding: 0.35em 0.65em;
        }

        a {
            text-decoration: none;
            &:hover {
                text-decoration: underline;
            }
        }
    }
</style>
