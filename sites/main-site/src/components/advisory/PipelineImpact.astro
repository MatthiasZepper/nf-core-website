---
interface Props {
    pipelines: Array<string | { name: string; versions: string[] }>;
}

const { pipelines } = Astro.props;

const hasVersions = (pipeline: string | { name: string; versions: string[] }): pipeline is { name: string; versions: string[] } => {
    return typeof pipeline === 'object' && 'versions' in pipeline;
};

const sectionId = `pipeline-impact-${Math.random().toString(36).substring(2, 9)}`;
---

<div class="collapsible-section">
    <button
        class="collapse-button"
        aria-expanded="true"
        aria-controls={sectionId}
        data-bs-toggle="collapse"
        data-bs-target={`#${sectionId}`}
    >
        <h3 class="h5 mb-2">
            <i class="fas fa-project-diagram me-2"></i>
            Affected Pipelines
        </h3>
    </button>
    <div id={sectionId} class="collapse show">
        <ul class="list-unstyled mb-0">
            {pipelines.map((pipeline) => {
                const name = hasVersions(pipeline) ? pipeline.name : pipeline;
                const versions = hasVersions(pipeline) ? pipeline.versions : null;
                return (
                    <li class="pipeline-impact-item">
                        <a href={`/${name}`} class="text-decoration-none">
                            <code class="pipeline-name">{name}</code>
                        </a>
                        {versions && versions.length > 0 && (
                            <div class="versions">
                                <div class="version-tags">
                                    {versions.map((version) => (
                                        <span class="version-tag">{version}</span>
                                    ))}
                                </div>
                            </div>
                        )}
                    </li>
                );
            })}
        </ul>
    </div>
</div>

<style lang="scss">
    .collapsible-section {
        .collapse-button {
            background: none;
            border: none;
            padding: 0.75rem;
            color: var(--bs-body-color);
            font-weight: 500;
            display: flex;
            align-items: center;
            width: 100%;
            text-align: left;
            cursor: pointer;
            transition: all 0.2s ease;
            border-radius: 0.375rem;
            margin-bottom: 0.5rem;

            &:hover {
                color: var(--bs-primary);

                h3 {
                    color: var(--bs-primary);
                }

            }

            &:active {
                transform: translateY(1px);
            }

            h3 {
                margin: 0;
                transition: color 0.2s ease;
                display: flex;
                align-items: center;
                width: 100%;
            }

            i {
                transition: all 0.2s ease;
                margin-right: 0.5rem;
            }

            &[aria-expanded="false"] {
                i.fa-project-diagram {
                    transform: rotate(-90deg);
                }
            }
        }

        .collapse {
            transition: all 0.2s ease-in-out;
        }
    }

    .pipeline-impact-item {
        margin-bottom: 1rem;
        &:last-child {
            margin-bottom: 0;
        }

        .pipeline-name {
            background-color: var(--bs-tertiary-bg);
            padding: 0.2rem 0.4rem;
            border-radius: 0.25rem;
            font-size: 0.9rem;
            display: inline-block;
        }

        .versions {
            margin-top: 0.5rem;
            margin-left: 1rem;
            font-size: 0.9rem;

            .version-tags {
                display: flex;
                flex-wrap: wrap;
                gap: 0.25rem;
                margin-top: 0.25rem;

                .version-tag {
                    background-color: var(--bs-primary-bg-subtle);
                    color: var(--bs-primary);
                    padding: 0.1rem 0.3rem;
                    border-radius: 0.25rem;
                    font-size: 0.8rem;
                    white-space: nowrap;
                }
            }
        }
    }
</style>
