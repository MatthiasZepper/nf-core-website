---
interface Props {
    subworkflows: string[];
}

const { subworkflows } = Astro.props;
const sectionId = `subworkflow-impact-${Math.random().toString(36).substring(2, 9)}`;
---

<div class="collapsible-section">
    <button
        class="collapse-button"
        aria-expanded="true"
        aria-controls={sectionId}
        data-bs-toggle="collapse"
        data-bs-target={`#${sectionId}`}
    >
        <i class="fas fa-chevron-down me-2"></i>
        <span>Show affected subworkflows</span>
    </button>
    <div id={sectionId} class="collapse show">
        <ul class="list-unstyled mb-0">
            {subworkflows.map((subworkflow) => (
                <li class="subworkflow-impact-item">
                    <a href={`/subworkflows/${subworkflow}`} class="text-decoration-none">
                        <code class="subworkflow-name" title={subworkflow}>{subworkflow}</code>
                    </a>
                </li>
            ))}
        </ul>
    </div>
</div>

<style lang="scss">
    .collapsible-section {
        .collapse-button {
            background: none;
            border: none;
            padding: 0.75rem;
            color: var(--bs-body-color);
            font-weight: 500;
            display: flex;
            align-items: center;
            width: 100%;
            text-align: left;
            cursor: pointer;
            transition: all 0.2s ease;
            border-radius: 0.375rem;
            margin-bottom: 0.5rem;

            &:hover {
                color: var(--bs-primary);

                h3 {
                    color: var(--bs-primary);
                }

                i {
                    transform: translateX(2px);
                }
            }

            h3 {
                margin: 0;
                transition: color 0.2s ease;
                display: flex;
                align-items: center;
                width: 100%;
            }

            i {
                transition: all 0.2s ease;
                margin-right: 0.5rem;
            }

            &[aria-expanded="false"] {
                i.fa-chevron-down {
                    transform: rotate(-90deg);
                }
            }
        }

        .collapse {
            transition: all 0.2s ease-in-out;
        }
    }

    .subworkflow-impact-item {
        margin-bottom: 0.5rem;
        &:last-child {
            margin-bottom: 0;
        }

        .subworkflow-name {
            background-color: var(--bs-tertiary-bg);
            padding: 0.2rem 0.4rem;
            border-radius: 0.25rem;
            font-size: 0.9rem;
            display: inline-block;
            max-width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            vertical-align: middle;

            &:hover {
                overflow: visible;
                white-space: normal;
                word-break: break-word;
                position: relative;
                z-index: 1;
                background-color: var(--bs-tertiary-bg);
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            }
        }
    }
</style>

<script>
    // Handle the collapse button text update
    document.querySelectorAll('.collapse-button').forEach(button => {
        button.addEventListener('click', () => {
            const isExpanded = button.getAttribute('aria-expanded') === 'true';
            const span = button.querySelector('span');
            if (span) {
                span.textContent = isExpanded ? 'Show affected subworkflows' : 'Hide affected subworkflows';
            }
        });
    });
</script>
