---
import PipelineImpact from './PipelineImpact.astro';
import OtherImpact from './OtherImpact.astro';

interface Props {
    frontmatter: {
        pipelines?: Array<string | { name: string; versions: string[] }>;
        subworkflows?: string[];
        modules?: string[];
        configuration?: string[];
    };
}

const { frontmatter } = Astro.props;

const hasImpact = frontmatter.pipelines?.length ||
                 frontmatter.subworkflows?.length ||
                 frontmatter.modules?.length ||
                 frontmatter.configuration?.length;
---

{hasImpact && (
    <div class="advisory-impact">
        <h2 class="h4 mb-3">Impact</h2>
        <div class="impact-grid">
            {frontmatter.pipelines?.length > 0 && (
                <div class="impact-section">
                    <PipelineImpact pipelines={frontmatter.pipelines} />
                </div>
            )}

            {frontmatter.subworkflows?.length > 0 && (
                <div class="impact-section">
                    <OtherImpact
                        items={frontmatter.subworkflows}
                        title="Affected subworkflows"
                        icon="fa-sitemap"
                        urlPrefix="/subworkflows"
                    />
                </div>
            )}

            {frontmatter.modules?.length > 0 && (
                <div class="impact-section">
                    <OtherImpact
                        items={frontmatter.modules}
                        title="Affected Modules"
                        icon="fa-cube"
                        urlPrefix="/modules"
                    />
                </div>
            )}

            {frontmatter.configuration?.length > 0 && (
                <div class="impact-section">
                    <OtherImpact
                        items={frontmatter.configuration}
                        title="Affected Configuration"
                        icon="fa-cogs"
                        urlPrefix="/configs"
                    />
                </div>
            )}
        </div>
    </div>
)}

<style lang="scss">
    .advisory-impact {
        background-color: var(--bs-body-bg);
        border-radius: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 1px solid var(--bs-border-color);
        padding: 1.5rem;
        margin-bottom: 2rem;

        .impact-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .impact-section {
            h3 {
                color: var(--bs-body-color);
                font-size: 1.1rem;
                i {
                    color: var(--bs-primary);
                }
            }

            code {
                background-color: var(--bs-tertiary-bg);
                padding: 0.2rem 0.4rem;
                border-radius: 0.25rem;
                font-size: 0.9rem;
            }

            a {
                &:hover {
                    text-decoration: underline !important;
                }
            }
        }
    }
</style>
